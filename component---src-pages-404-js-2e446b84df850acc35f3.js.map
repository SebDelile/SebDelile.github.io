{"version":3,"file":"component---src-pages-404-js-2e446b84df850acc35f3.js","mappings":"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","sources":["webpack://seb-delile/./src/fonts/CaviarDreams-webfont.eot","webpack://seb-delile/./src/fonts/CaviarDreams-webfont.woff","webpack://seb-delile/./src/fonts/CaviarDreams-webfont.woff2","webpack://seb-delile/./src/fonts/CaviarDreams-webfont.ttf","webpack://seb-delile/./src/fonts/CaviarDreams-webfont.svg","webpack://seb-delile/./src/utils/style/GlobalStyleProvider.jsx","webpack://seb-delile/./src/components/SocialMedia.jsx","webpack://seb-delile/./src/components/Header.jsx","webpack://seb-delile/./src/components/Footer.jsx","webpack://seb-delile/./src/components/WorkInProgressBadge.jsx","webpack://seb-delile/./src/components/PageLayout.jsx","webpack://seb-delile/./src/pages/404.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/CaviarDreams-webfont-1d79cf44266336c54069f6ac8d2cf338.eot\";","export default __webpack_public_path__ + \"static/CaviarDreams-webfont-921ef7ca1af365ffb313d7ee39368e0b.woff\";","export default __webpack_public_path__ + \"static/CaviarDreams-webfont-d9ba717d3ea0850fc4a27d9fa7e5fea3.woff2\";","export default __webpack_public_path__ + \"static/CaviarDreams-webfont-9d9f8317bb6c880d5d97bad4c1dafb95.ttf\";","export default __webpack_public_path__ + \"static/CaviarDreams-webfont-ce239c677144f2ef23a9d9a87e8added.svg\";","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport caviarFontEot from '../../fonts/CaviarDreams-webfont.eot';\r\nimport caviarFontWoof from '../../fonts/CaviarDreams-webfont.woff';\r\nimport caviarFontWoof2 from '../../fonts/CaviarDreams-webfont.woff2';\r\nimport caviarFontTtf from '../../fonts/CaviarDreams-webfont.ttf';\r\nimport caviarFontSvg from '../../fonts/CaviarDreams-webfont.svg';\r\n\r\nexport const GlobalStyleProvider = ({ children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyle />\r\n      {children}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  /* --------------------------------------------------\r\n  --------------------- CSS reset ---------------------\r\n  -------------------------------------------------- */\r\n\r\n  *,\r\n  *::after,\r\n  *::before {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n  }\r\n\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: unset;\r\n    cursor: pointer;\r\n  }\r\n\r\n  button {\r\n    background-color: inherit;\r\n    border: none;\r\n    color : inherit;\r\n    font: inherit;\r\n    cursor: pointer;\r\n  }\r\n\r\n  dialog {\r\n    border: none;\r\n    color: inherit;\r\n    background: unset;\r\n  }\r\n\r\n  /* --------------------------------------------------\r\n  -------------------- Typography ---------------------\r\n  -------------------------------------------------- */\r\n\r\n  @font-face {\r\n    font-family: \"caviar_dreamsregular\";\r\n    src: url(${caviarFontEot});\r\n    src: url(${caviarFontWoof2}) format(\"woff2\"),\r\n      url(${caviarFontWoof}) format(\"woff\"),\r\n      url(${caviarFontTtf}) format(\"truetype\"),\r\n      url(${caviarFontSvg}) format(\"svg\");\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n\r\n  body * {\r\n      font-family: \"DM Sans\", \"sans-serif\";\r\n  }\r\n\r\n  h1, h2 {\r\n    font-family: \"caviar_dreamsregular\", \"Zen Kurenaido\", sans-serif;\r\n  }\r\n\r\n  /* --------------------------------------------------\r\n  --------------------- Variables ---------------------\r\n  -------------------------------------------------- */\r\n\r\n  body {\r\n    --color-primary: #043B6B;\r\n    --color-secondary: #DDDDDD;\r\n    --color-background: #EEEEEE;\r\n\r\n    --boxshadow-main: 0 0 0.25rem 0.125rem rgba(0, 0, 0, 0.5);\r\n    --boxshadow-slight: 0 0 0.25rem rgba(0, 0, 0, 0.5);\r\n    --boxshadow-drop: 0 0.25rem 0.25rem rgba(0, 0, 0, 0.5);\r\n\r\n    --transition-duration: 250ms\r\n  }\r\n\r\n  /* --------------------------------------------------\r\n  --------------------- Keyframes ---------------------\r\n  -------------------------------------------------- */\r\n\r\n  @keyframes infobulle-appears {\r\n    from {opacity: 0}\r\n    to {opacity: 1}\r\n  }\r\n\r\n  /* --------------------------------------------------\r\n  ------------------- Global styles -------------------\r\n  -------------------------------------------------- */\r\n\r\n  html,\r\n  body {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  #___gatsby, #gatsby-focus-wrapper {\r\n    all: inherit;\r\n  }\r\n  \r\n  .sr-only {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nexport const SocialMedia = ({ className }) => {\r\n  const socialMediaQuery = useStaticQuery(graphql`\r\n    query SocialMediaQuery {\r\n      allSocialMediaDataJson {\r\n        nodes {\r\n          icon {\r\n            publicURL\r\n          }\r\n          id\r\n          infobulle\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const socialMediaData = socialMediaQuery.allSocialMediaDataJson.nodes;\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      {socialMediaData.map((media) => (\r\n        <A\r\n          key={media.id}\r\n          href={media.url}\r\n          aria-label={media.infobulle}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon src={media.icon.publicURL} alt={media.name + ' icon'} />\r\n        </A>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst A = styled.a`\r\n  display: inline-block;\r\n  position: relative;\r\n  height: 3.5rem;\r\n  width: 3.5rem;\r\n  padding: 1rem;\r\n\r\n  &:hover > img,\r\n  &:focus > img {\r\n    transform: scale(1.25);\r\n  }\r\n\r\n  ${() => infobulleStyleRules}\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: scale(1);\r\n  transition: transform 0.4s;\r\n`;\r\n\r\nconst infobulleStyleRules = `&:hover::after,\r\n&:focus::after,\r\n&:hover::before,\r\n&:focus::before {\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 100%;\r\n  animation: infobulle-appears 0s 0.4s both;\r\n}\r\n\r\n&:hover::after,\r\n&:focus::after {\r\n  content: attr(aria-label);\r\n  transform: translate(-25%);\r\n  z-index: 1;\r\n  white-space: nowrap;\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem;\r\n  border-radius: 0.25rem;\r\n  background-color: var(--color-secondary);\r\n  color: black;\r\n  box-shadow: 0 0 0.125rem black;\r\n}\r\n\r\n&:hover::before,\r\n&:focus::before {\r\n  content: '';\r\n  transform: translate(-50%, calc(-100% + 1px));\r\n  z-index: 2;\r\n  border-right : 0.5rem solid transparent;\r\n  border-bottom : 0.6rem solid var(--color-secondary);\r\n  border-left : 0.5rem solid transparent;\r\n}`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SocialMedia } from './SocialMedia';\r\n\r\nexport const Header = () => (\r\n  <Wrapper>\r\n    <Name>Sébastien Delile</Name>\r\n    <Job> - développeur react.js</Job>\r\n    <HeaderSocialMedia />\r\n    <LangSelection>\r\n      {['fr'].map((lang) => (\r\n        <option key={lang} value={lang}>\r\n          {lang}\r\n        </option>\r\n      ))}\r\n    </LangSelection>\r\n  </Wrapper>\r\n);\r\n\r\nconst breakpoints = ['30rem', '48rem'];\r\n\r\nconst Wrapper = styled.header`\r\n  position: sticky;\r\n  z-index: 100;\r\n  top: 0;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-template-rows: auto auto;\r\n  grid-template-areas:\r\n    'name name'\r\n    'social-media lang-selection';\r\n  justify-items: flex-start;\r\n  align-items: center;\r\n  align-content: end;\r\n  gap: 0;\r\n  padding-top: 1rem;\r\n  background: var(--color-primary);\r\n  color: var(--color-secondary);\r\n  box-shadow: var(--boxshadow-main);\r\n\r\n  @media only screen and (min-width: ${breakpoints[0]}) {\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-template-rows: auto auto;\r\n    grid-template-areas:\r\n      'name job job'\r\n      'social-media social-media lang-selection';\r\n  }\r\n\r\n  @media only screen and (min-width: ${breakpoints[1]}) {\r\n    grid-template-columns: auto 1fr auto auto;\r\n    grid-template-rows: auto;\r\n    grid-template-areas: 'name job social-media lang-selection';\r\n    align-content: center;\r\n    padding-top: 0;\r\n  }\r\n`;\r\n\r\nconst Name = styled.p`\r\n  grid-area: name;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Job = styled.p`\r\n  display: none;\r\n  grid-area: job;\r\n  font-size: 1.25rem;\r\n  padding-left: 0.25rem;\r\n\r\n  @media only screen and (min-width: ${breakpoints[0]}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst LangSelection = styled.select`\r\n  grid-area: lang-selection;\r\n`;\r\n\r\nconst HeaderSocialMedia = styled(SocialMedia)`\r\n  grid-area: social-media;\r\n  position: relative;\r\n  right: 1rem;\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SocialMedia } from './SocialMedia';\r\n\r\nexport const Footer = () => (\r\n  <Wrapper>\r\n    <Recipe>\r\n      Page faite par mes soins en react.js puis générée avec Gatsby.\r\n    </Recipe>\r\n    <Disclaimer>2021 - tous droits réservés.</Disclaimer>\r\n    <FooterSocialMedia />\r\n  </Wrapper>\r\n);\r\n\r\nconst breakpoints = ['48rem'];\r\n\r\nconst Wrapper = styled.footer`\r\n  display: grid;\r\n  grid-template-columns: auto;\r\n  grid-template-rows: repeat(3, auto);\r\n  grid-template-areas:\r\n    'social-media'\r\n    'recipe'\r\n    'disclaimer';\r\n  justify-items: center;\r\n  align-items: center;\r\n  gap: 0;\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 2rem;\r\n  background: var(--color-primary);\r\n  color: var(--color-secondary);\r\n  font-size: 0.75rem;\r\n  overflow-x: hidden; /* infobull on minimal screenwidth could cause a uggly horizontal scrollbar to appear !*/\r\n\r\n  @media only screen and (min-width: ${breakpoints[0]}) {\r\n    grid-template-columns: 1fr auto;\r\n    grid-template-rows: repeat(2, auto);\r\n    grid-template-areas:\r\n      'recipe social-media'\r\n      'disclaimer social-media';\r\n    justify-items: start;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Recipe = styled.p`\r\n  grid-area: recipe;\r\n  margin-top: 0.5rem;\r\n  text-align: center;\r\n\r\n  @media only screen and (min-width: ${breakpoints[0]}) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Disclaimer = styled.p`\r\n  grid-area: disclaimer;\r\n  margin-top: 0.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst FooterSocialMedia = styled(SocialMedia)`\r\n  grid-area: social-media;\r\n  width: 100%;\r\n  max-width: 22rem;\r\n  justify-content: space-around;\r\n\r\n  @media only screen and (min-width: ${breakpoints[0]}) {\r\n    width: unset;\r\n    justify-content: center;\r\n    align-self: start;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const WorkInProgressBadge = () => (\r\n  <Wrapper>\r\n    <P>Work In Progress</P>\r\n  </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 200;\r\n  position: fixed;\r\n  top: calc(10rem / 1.414);\r\n  right: 0;\r\n  width: 10rem;\r\n  transform: translate(0, -100%);\r\n`;\r\n\r\nconst P = styled.p`\r\n  background: darkred;\r\n  transform: rotate(45deg);\r\n  transform-origin: bottom right;\r\n  font-size: 0.75rem;\r\n  text-align: center;\r\n  width: 100%;\r\n  padding: 0.5rem 0;\r\n  color: white;\r\n`;\r\n","import * as React from 'react';\r\nimport { GlobalStyleProvider } from '../utils/style/GlobalStyleProvider';\r\nimport styled from 'styled-components';\r\nimport { Header } from './Header';\r\nimport { Footer } from './Footer';\r\nimport { WorkInProgressBadge } from './WorkInProgressBadge';\r\n\r\nexport const PageLayout = ({ children, title }) => (\r\n  <>\r\n    <GlobalStyleProvider />\r\n    <title>{title}</title>\r\n    <Wrapper>\r\n      <WorkInProgressBadge />\r\n      <Header />\r\n      <Main>{children}</Main>\r\n      <Footer />\r\n    </Wrapper>\r\n  </>\r\n);\r\n\r\nconst breakpoints = ['20rem', '90rem'];\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  min-height: 100%;\r\n  min-width: 20rem;\r\n  background: var(--color-background);\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > header,\r\n  & > main,\r\n  & > footer {\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    flex-shrink: 0;\r\n\r\n    @media only screen and (min-width: ${breakpoints[0]}) {\r\n      padding-left: calc(100vw * 0.05);\r\n      padding-right: calc(100vw * 0.05 - (100vw - 100%));\r\n      /* min-width 20rem : (100vw-100%) on the padding-rigth allows the content to remain centred even in the presence of Y-scroolbar*/\r\n    }\r\n    @media only screen and (min-width: ${breakpoints[1]}) {\r\n      padding-left: calc((100vw - 90rem * 0.9) / 2);\r\n      padding-right: calc((100vw - 90rem * 0.9) / 2 - (100vw - 100%));\r\n      /* min-width 90rem : content never exceeds 90rem*/\r\n    }\r\n  }\r\n`;\r\n\r\nconst Main = styled.main`\r\n  flex-grow: 1;\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { PageLayout } from '../components/PageLayout';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <PageLayout title=\"Not Found\">\r\n      <h1>Page non trouvée</h1>\r\n      <p>Désolé, nous n'avons pas trouvé la page que vous demandez</p>\r\n      <Link to=\"/\">Retourner à l'accueil</Link>.\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"names":["GlobalStyleProvider","children","GlobalStyle","createGlobalStyle","caviarFontEot","caviarFontWoof2","caviarFontWoof","caviarFontTtf","caviarFontSvg","SocialMedia","className","socialMediaData","useStaticQuery","allSocialMediaDataJson","nodes","Wrapper","map","media","A","key","id","href","url","infobulle","target","rel","Icon","src","icon","publicURL","alt","name","styled","infobulleStyleRules","Header","Name","Job","HeaderSocialMedia","LangSelection","lang","value","breakpoints","Footer","Recipe","Disclaimer","FooterSocialMedia","WorkInProgressBadge","P","PageLayout","title","Main","to"],"sourceRoot":""}